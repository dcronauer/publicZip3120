global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user ubuntu
    group ubuntu
    daemon

    # Default SSL material locations
    ca-base /etc/ssl/certs
    crt-base /etc/ssl/private

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http
    
# Frontend configuration (accepts HTTP traffic)
frontend http_front
    bind *:80  # Bind on port 80 for incoming HTTP traffic
    acl has_cookie_cookie    hdr(cookie) -m found
    use_backend web_servers_with_cookie if has_cookie_cookie
    default_backend web_servers  # Default backend if no cookie is found
    log     global  # Ensure logging for frontend

# Backend configuration (3 web servers without cookies)
backend web_servers
    balance roundrobin  # Load balancing method (round-robin)
    cookie SERVERID insert indirect nocache  # Enable cookie-based session persistence
    server web1 172.18.1.10:80 check cookie web1
    server web2 172.18.1.11:80 check cookie web2
    server web3 172.18.1.12:80 check cookie web3
    log     global  # Ensure logging for backend

# Backend configuration for users who already have a cookie
backend web_servers_with_cookie
    balance roundrobin  # Load balancing method (round-robin)
    cookie SERVERID insert indirect nocache
    server web1 172.18.1.10:80 check cookie web1
    server web2 172.18.1.11:80 check cookie web2
    server web3 172.18.1.12:80 check cookie web3
    log     global  # Ensure logging for backend

# Stats page configuration
frontend stats_front
    bind *:8080  # Bind on port 8080 for stats page
    stats enable
    stats uri /haproxy_stats  # URL path for stats page
    stats refresh 10s  # Auto-refresh stats page every 10 seconds
    stats auth admin:voodoo  # Set authentication for stats page 
    stats hide-version  # Hide the HAProxy version on the stats page
    stats admin if TRUE  # Allow access only if authenticated as an admin

    # Define IPs or subnets that are allowed to access the stats page
    acl allowed_ips src 130.108.0.0/16 74.139.93.82/32   # Allow access from these IPs or subnets
    
    # Allow access only from the allowed IPs
    http-request deny if !allowed_ips  # Deny access from non-allowed IPs

